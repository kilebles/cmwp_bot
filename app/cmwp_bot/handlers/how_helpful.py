from aiogram import Router, F
from aiogram.types import CallbackQuery

from app.cmwp_bot.presentation.keyboards import how_helpful_kb
from app.cmwp_bot.services.email_service import send_discuss_email
from app.cmwp_bot.services.action_service import log_discuss_project

router = Router()


@router.callback_query(F.data == 'how_helpful')
async def show_contacts(callback: CallbackQuery):
    # TODO: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–µ–Ω—è—Ç—å message –∏–∑ –∞–¥–º–∏–Ω–∫–∏ (–ø–æ–¥—Ç—è–≥–∏–≤–∞—Ç—å –∏–∑ –±–¥ —Ç–µ–∫—Å—Ç –∏ —Ñ–æ—Ç–æ)
    
    await callback.message.delete()
    await callback.message.answer_photo(
        photo='https://i.postimg.cc/Nfss4q1y/FR7A1162.jpg',
        caption=(
            "<b>–ß–µ–ª–æ–≤–µ–∫ ‚Äî –º–µ—Ä–∞ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.</b>\n\n"
            "–ü–æ—ç—Ç–æ–º—É –º—ã —Å–æ–∑–¥–∞—ë–º –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –∏ –¥–ª—è –ª—é–¥–µ–π ‚Äî —Å –ø–µ—Ä–≤—ã—Ö –∏–¥–µ–π –¥–æ –≤–≤–æ–¥–∞ –≤ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—é.\n\n"
            "<b>–ù–∞—à–∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏:</b>\n"
            "‚Äî –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞—É–¥–∏—Ç –ø–æ–º–µ—â–µ–Ω–∏–π\n"
            "‚Äî –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏\n"
            "‚Äî –°—Ç—Ä–∞—Ç–µ–≥–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤\n"
            "‚Äî –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ–º –∏ –æ—Ç–¥–µ–ª–∫–æ–π\n"
            "‚Äî –ö–æ–Ω—Ç—Ä–æ–ª—å –±—é–¥–∂–µ—Ç–∞, —Å—Ä–æ–∫–æ–≤ –∏ –∫–∞—á–µ—Å—Ç–≤–∞\n\n"
            "<b>–ù–∞–º –¥–æ–≤–µ—Ä—è—é—Ç:</b> –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫, –õ—É–∫–æ–π–ª, Huawei, Nestl√©, –ù–õ–ú–ö, –†–ñ–î, –ì–∞–∑–ø—Ä–æ–º, –í–¢–ë –∏ –¥—Ä—É–≥–∏–µ –ª–∏–¥–µ—Ä—ã —Ä—ã–Ω–∫–∞.\n\n"
            "–ö–∞–∂–¥—ã–π –ø—Ä–æ–µ–∫—Ç ‚Äî —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π –ø–æ–¥ –∑–∞–¥–∞—á–∏ –±–∏–∑–Ω–µ—Å–∞."
        ),
        reply_markup=how_helpful_kb,
        parse_mode='HTML'
    )
    await callback.answer()
    

@router.callback_query(F.data == 'discuss_project')
async def contacts_answer(callback: CallbackQuery):
    """–ö–æ–º–º–∏—Ç –≤ –±–¥, —Ä–∞—Å—Å—ã–ª–∫–∞ –∞–¥–º–∏–Ω–∞–º –≤ —Ç–≥ –∏ –Ω–∞ –ø–æ—á—Ç—É"""
    
    from_user = callback.from_user
    bot = callback.bot

    user, admin_ids = await log_discuss_project(from_user)

    full_name = f'{user.first_name or ""} {user.last_name or ""}'.strip()
    username_link = f'https://t.me/{from_user.username}' if from_user.username else '‚Äî'

    text = (
        f'üë§ <b>{full_name}</b>\n'
        f'—Ö–æ—á–µ—Ç –æ–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç\n\n'
        f'–ö–æ–º–ø–∞–Ω–∏—è: {user.company or "‚Äî"}\n'
        f'–¢–µ–ª–µ—Ñ–æ–Ω: {user.phone or "‚Äî"}\n'
        f'–ü—Ä–æ—Ñ–∏–ª—å: {username_link}'
    )

    for admin_id in admin_ids:
        try:
            await bot.send_message(admin_id, text, parse_mode='HTML')
        except Exception:
            pass

    await send_discuss_email(
        full_name=full_name,
        username_link=username_link,
        phone=user.phone or "‚Äî",
        company=user.company or "‚Äî"
    )

    await callback.message.answer(
        '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –º—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏!'
    )
    await callback.answer()